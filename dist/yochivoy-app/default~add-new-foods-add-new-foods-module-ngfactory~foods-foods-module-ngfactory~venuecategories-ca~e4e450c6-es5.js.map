{"version":3,"sources":["src/app/services-venue/apis.service.ts","src/app/services/util.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { AngularFireAuth } from \"@angular/fire/auth\";\nimport { BehaviorSubject } from \"rxjs\";\nimport * as firebase from \"firebase\";\nimport { AngularFirestore } from \"@angular/fire/firestore\";\nimport { environment } from \"src/environments/environment\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { TranslateService } from '@ngx-translate/core';\nimport Swal from 'sweetalert2';\nexport class AuthInfo {\n  constructor(public $uid: string) {}\n\n  isLoggedIn() {\n    return !!this.$uid;\n  }\n}\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ApisService {\n  static UNKNOWN_USER = new AuthInfo(null);\n  db = firebase.firestore();\n  public authInfo$: BehaviorSubject<AuthInfo> = new BehaviorSubject<AuthInfo>(\n    ApisService.UNKNOWN_USER\n  );\n  constructor(\n    private fireAuth: AngularFireAuth,\n    private adb: AngularFirestore,\n    private http: HttpClient,\n    private translateService: TranslateService\n  ) {}\n\n  public checkAuth() {\n    return new Promise(resolve => {\n      this.fireAuth.auth.onAuthStateChanged(user => {\n        resolve(user);\n      });\n    });\n  }\n\n  alerts(title, message, type) {\n    Swal.fire(\n      title,\n      message,\n      type\n    );\n  }\n\n  translate(str) {\n    const currentLang = this.translateService.currentLang;\n    const returnValue = this.translateService.translations[currentLang][str];\n    if (returnValue === undefined) {\n      return this.translateService.translations.en_merch[str];\n    } else {\n      return returnValue;\n    }\n  }\n  public login(email: string, password: string): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this.fireAuth.auth\n        .signInWithEmailAndPassword(email, password)\n        .then(res => {\n          if (res.user) {\n            this.db\n              .collection(\"users\")\n              .doc(res.user.uid)\n              .update({\n                fcm_token: localStorage.getItem(\"fcm\")\n                  ? localStorage.getItem(\"fcm\")\n                  : \"\"\n              });\n            this.authInfo$.next(new AuthInfo(res.user.uid));\n            resolve(res.user);\n          }\n        })\n        .catch(err => {\n          this.authInfo$.next(ApisService.UNKNOWN_USER);\n          reject(`login failed ${err}`);\n        });\n    });\n  }\n\n  public register(\n    emails: string,\n    pwd: string,\n    fnames: string,\n    lnames\n  ): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this.fireAuth.auth\n        .createUserWithEmailAndPassword(emails, pwd)\n        .then(res => {\n          if (res.user) {\n            this.db\n              .collection(\"users\")\n              .doc(res.user.uid)\n              .set({\n                uid: res.user.uid,\n                email: emails,\n                fname: fnames,\n                lname: lnames,\n                type: \"venue\",\n                status: \"open\"\n              });\n            this.authInfo$.next(new AuthInfo(res.user.uid));\n            resolve(res.user);\n          }\n        })\n        .catch(err => {\n          this.authInfo$.next(ApisService.UNKNOWN_USER);\n          reject(`login failed ${err}`);\n        });\n    });\n  }\n\n  public logout(): Promise<void> {\n    this.authInfo$.next(ApisService.UNKNOWN_USER);\n    // this.db.collection('users').doc(localStorage.getItem('uid')).update({ 'fcm_token': firebase.firestore.FieldValue.delete() })\n    return this.fireAuth.auth.signOut();\n  }\n\n  public resetPassword(email: string): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this.fireAuth.auth\n        .sendPasswordResetEmail(email)\n        .then(res => {\n          resolve(res);\n        })\n        .catch(err => {\n          reject(`reset failed ${err}`);\n        });\n    });\n  }\n\n  public checkEmail(email: string): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this.fireAuth.auth\n        .fetchSignInMethodsForEmail(email)\n        .then((info: any) => {\n          resolve(info);\n        })\n        .catch(error => {\n          reject(error);\n        });\n    });\n  }\n\n  public getProfile(id): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this.adb\n        .collection(\"users\")\n        .doc(id)\n        .get()\n        .subscribe(\n          (profile: any) => {\n            resolve(profile.data());\n          },\n          error => {\n            reject(error);\n          }\n        );\n    });\n  }\n\n  public getMessages(id): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this.adb\n        .collection(\"messages\")\n        .doc(id)\n        .collection(\"chats\")\n        .get()\n        .subscribe(\n          (messages: any) => {\n            console.log(messages);\n            let data = messages.docs.map(element => {\n              let item = element.data();\n              item.id = element.id;\n              return item;\n            });\n            resolve(data);\n          },\n          error => {\n            reject(error);\n          }\n        );\n    });\n  }\n\n  public updateProfile(uid, param): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this.db\n        .collection(\"users\")\n        .doc(uid)\n        .update(param)\n        .then(data => {\n          resolve(data);\n        })\n        .catch(error => {\n          reject(error);\n        });\n    });\n  }\n\n  public getVenueDetails(id): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this.adb\n        .collection(\"venue\")\n        .doc(id)\n        .get()\n        .subscribe(\n          (venue: any) => {\n            resolve(venue.data());\n          },\n          error => {\n            reject(error);\n          }\n        );\n    });\n  }\n\n  public getVenueCategories(id): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this.adb\n        .collection(\"categories\", ref => ref.where(\"uid\", \"==\", id))\n        .get()\n        .subscribe(\n          venue => {\n            var data = venue.docs.map(element => {\n              var item = element.data();\n              item.id = element.id;\n              return item;\n            });\n            resolve(data);\n          },\n          error => {\n            reject(error);\n          }\n        );\n    });\n  }\n\n  public updateVenueCategoies(id, cid, param): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this.adb\n        .collection(\"categories\")\n        .doc(cid)\n        .update(param)\n        .then(\n          data => {\n            resolve(data);\n          },\n          error => {\n            reject(error);\n          }\n        );\n    });\n  }\n\n  public deleteCategory(id, cid): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this.db\n        .collection(\"categories\")\n        .doc(cid)\n        .delete()\n        .then(data => {\n          resolve(data);\n        })\n        .catch(error => {\n          reject(error);\n        });\n    });\n  }\n\n  public deleteFood(uid, id): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this.db\n        .collection(\"foods\")\n        .doc(uid)\n        .collection(\"all\")\n        .doc(id)\n        .delete()\n        .then(data => {\n          resolve(data);\n        })\n        .catch(error => {\n          reject(error);\n        });\n    });\n  }\n\n  public getFoodWithId(uid: any, id): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this.db\n        .collection(\"foods\")\n        .doc(uid)\n        .collection(\"all\")\n        .doc(id)\n        .get()\n        .then(\n          data => {\n            console.log(\"**\", data.data());\n            var item = data.data();\n            item.id = data.id;\n            data\n              .data()\n              .cid.get()\n              .then(function(doc) {\n                item.cid = doc.data();\n                item.cid.id = doc.id;\n              });\n            resolve(item);\n          },\n          error => {\n            reject(error);\n          }\n        );\n    });\n  }\n\n  public getFoods(uid: any): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this.db\n        .collection(\"foods\")\n        .doc(uid)\n        .collection(\"all\")\n        .get()\n        .then(\n          data => {\n            var users = data.docs.map(doc => {\n              var item = doc.data();\n              item.cid.get().then(function(doc) {\n                item.cid = doc.data();\n                item.cid.id = doc.id;\n              });\n              item.id = doc.id;\n              return item;\n            });\n            resolve(users);\n          },\n          error => {\n            reject(error);\n          }\n        );\n    });\n  }\n\n  public addFood(uid, id, param): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this.adb\n        .collection(\"foods\")\n        .doc(uid)\n        .collection(\"all\")\n        .doc(id)\n        .set(param)\n        .then(\n          data => {\n            resolve(data);\n          },\n          error => {\n            reject(error);\n          }\n        );\n    });\n  }\n\n  public updateFood(uid, id, param): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this.adb\n        .collection(\"foods\")\n        .doc(uid)\n        .collection(\"all\")\n        .doc(id)\n        .update(param)\n        .then(\n          data => {\n            resolve(data);\n          },\n          error => {\n            reject(error);\n          }\n        );\n    });\n  }\n\n  public addVenueCategoies( cid, param): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this.adb\n        .collection(\"categories\")\n        .doc(cid)\n        .set(param)\n        .then(\n          data => {\n            resolve(data);\n          },\n          error => {\n            reject(error);\n          }\n        );\n    });\n  }\n\n  \n\n  public createVenue(informations: any): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this.adb\n        .collection(\"venue\")\n        .doc(informations.uid)\n        .set(informations)\n        .then(\n          data => {\n            resolve(data);\n          },\n          error => {\n            reject(error);\n          }\n        )\n        .catch(error => {\n          reject(error);\n        });\n    });\n  }\n\n  public updateVenue(informations: any): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this.adb\n        .collection(\"venue\")\n        .doc(informations.uid)\n        .update(informations)\n        .then(\n          data => {\n            resolve(data);\n          },\n          error => {\n            reject(error);\n          }\n        )\n        .catch(error => {\n          reject(error);\n        });\n    });\n  }\n\n  sendNotification(msg, title, id) {\n    const body = {\n      app_id: environment.onesignal.appId,\n      include_player_ids: [id],\n      headings: { en: title },\n      contents: { en: msg },\n      data: { task: msg }\n    };\n    const header = {\n      headers: new HttpHeaders()\n        .set(\"Content-Type\", \"application/json\")\n        .set(\"Authorization\", `Basic ${environment.onesignal.restKey}`)\n    };\n    return this.http.post(\n      \"https://onesignal.com/api/v1/notifications\",\n      body,\n      header\n    );\n  }\n\n  public getMyOrders(id): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this.adb\n        .collection(\"orders\", ref => ref.where(\"restId\", \"==\", id))\n        .get()\n        .subscribe(\n          venue => {\n            let data = venue.docs.map(element => {\n              let item = element.data();\n              item.uid.get().then(function(doc) {\n                item.uid = doc.data();\n                item.uid.id = doc.id;\n              });\n              item.id = element.id;\n              return item;\n            });\n            resolve(data);\n          },\n          error => {\n            reject(error);\n          }\n        );\n    });\n  }\n\n  public getOrderById(id): Promise<any> {\n    return new Promise<any>(async (resolve, reject) => {\n      this.adb\n        .collection(\"orders\")\n        .doc(id)\n        .get()\n        .subscribe(\n          async (order: any) => {\n            let data = await order.data();\n            await data.uid.get().then(function(doc) {\n              data.uid = doc.data();\n              data.uid.id = doc.id;\n            });\n            await data.vid.get().then(function(doc) {\n              data.vid = doc.data();\n              data.vid.id = doc.id;\n            });\n           /* if (data && data.dId) {\n              await data.dId.get().then(function(doc) {\n                data.dId = doc.data();\n                data.dId.id = doc.id;\n              });\n            }*/\n            resolve(data);\n          },\n          error => {\n            reject(error);\n          }\n        );\n    });\n  }\n\n  public updateOrderStatus(id, value): Promise<any> {\n    return new Promise<any>(async (resolve, reject) => {\n      this.adb\n        .collection(\"orders\")\n        .doc(id)\n        .update({ status: value })\n        .then(async (order: any) => {\n          resolve(order);\n        })\n        .catch(error => {\n          reject(error);\n        });\n    });\n  }\n\n  public updateOrder(id, param): Promise<any> {\n    \n    //param.dId = this.db.collection(\"users\").doc(param.dId);\n    return new Promise<any>(async (resolve, reject) => {\n      this.adb\n        .collection(\"orders\")\n        .doc(id)\n        .update(param)\n        .then(async (order: any) => {\n          resolve(order);\n        })\n        .catch(error => {\n          reject(error);\n        });\n    });\n  }\n\n  public getDrivers(): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\nthis.adb.collection('users', ref => ref.where('type', '==', 'delivery').limit(3)).get().subscribe(async (venue) => {        let data = venue.docs.map(element => {\n          let item = element.data();\n          item.id = element.id;\n          return item;\n        });\n        resolve(data);\n      }, error => {\n        reject(error);\n      });\n    });\n  }\n\n  public getMyReviews(id): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this.adb\n        .collection(\"reviews\", ref => ref.where(\"restId\", \"==\", id))\n        .get()\n        .subscribe(\n          async review => {\n            let data = review.docs.map(element => {\n              let item = element.data();\n              item.id = element.id;\n              item.uid.get().then(function(doc) {\n                item.uid = doc.data();\n              });\n              return item;\n            });\n            resolve(data);\n          },\n          error => {\n            reject(error);\n          }\n        );\n    });\n  }\n\n  httpPost(url, body) {\n    const header = {\n      headers: new HttpHeaders()\n        .set(\"Content-Type\", \"application/x-www-form-urlencoded\")\n        .set(\"Authorization\", `Bearer ${environment.stripe.sk}`)\n    };\n    const order = this.JSON_to_URLEncoded(body);\n    console.log(order);\n    return this.http.post(url, order, header);\n  }\n\n  JSON_to_URLEncoded(element, key?, list?) {\n    let new_list = list || [];\n    if (typeof element == \"object\") {\n      for (let idx in element) {\n        this.JSON_to_URLEncoded(\n          element[idx],\n          key ? key + \"[\" + idx + \"]\" : idx,\n          new_list\n        );\n      }\n    } else {\n      new_list.push(key + \"=\" + encodeURIComponent(element));\n    }\n    return new_list.join(\"&\");\n  }\n}\n","import { environment } from 'src/environments/environment';\nimport { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilService {\n\n  report: any;\n  constructor(\n\n    private translateService: TranslateService\n  ) { }\n\n  translate(str) {\n    const currentLang = this.translateService.currentLang;\n    const returnValue = this.translateService.translations[currentLang][str];\n    if (returnValue === undefined) {\n      return this.translateService.translations.en_merch[str];\n    } else {\n      return returnValue;\n    }\n  }\n  setReport(data) {\n    this.report = data;\n  }\n\n  \n  getReport() {\n    return this.report;\n  }\n\n  getCurrencyCode() {\n    return environment.general.code;\n  }\n\n  getCurrecySymbol() {\n    return environment.general.symbol;\n  }\n  makeid(length) {\n    let result = '';\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    const charactersLength = characters.length;\n    for (let i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  }\n}\n"],"sourceRoot":"webpack:///","file":"default~add-new-foods-add-new-foods-module-ngfactory~foods-foods-module-ngfactory~venuecategories-ca~e4e450c6-es5.js"}