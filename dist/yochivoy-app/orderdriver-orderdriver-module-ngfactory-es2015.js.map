{"version":3,"sources":["./node_modules/ng2-toasty/src/toast.component.d.ts.ToastComponent.html","./node_modules/ng2-toasty/src/toasty.component.d.ts.ToastyComponent.html","./src/app/orderdriver/orderdriver-routing.module.ts","./src/app/orderdriver/orderdriver.component.html","./src/app/orderdriver/orderdriver.component.ts","./src/app/orderdriver/orderdriver.module.ts","./src/app/services/util.service.ts"],"names":[],"mappings":"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","file":"orderdriver-orderdriver-module-ngfactory-es2015.js","sourcesContent":["\n        <div class=\"toast\" [ngClass]=\"[toast.type, toast.theme]\">\n            <div *ngIf=\"toast.showClose\" class=\"close-button\" (click)=\"close($event)\"></div>\n            <div *ngIf=\"toast.title || toast.msg\" class=\"toast-text\">\n                <span *ngIf=\"toast.title\" class=\"toast-title\" [innerHTML]=\"toast.title | safeHtml\"></span>\n                <br *ngIf=\"toast.title && toast.msg\" />\n                <span *ngIf=\"toast.msg\" class=\"toast-msg\" [innerHtml]=\"toast.msg | safeHtml\"></span>\n            </div>\n        </div>","\n    <div id=\"toasty\" [ngClass]=\"[position]\">\n        <ng2-toast *ngFor=\"let toast of toasts\" [toast]=\"toast\" (closeToast)=\"closeToast(toast)\"></ng2-toast>\n    </div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { OrderdriverComponent } from './orderdriver.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: OrderdriverComponent,\r\n    data: {\r\n      breadcrumb: 'Order Driver'\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class OrderdriverRoutingModule { }\r\n","<ngx-spinner type=\"ball-pulse-sync\" color=\"#e74c3c\">\n  <p style=\"font-size: 20px; color: #e74c3c\">{{'Please wait...' | translate}}</p>\n</ngx-spinner>\n<div class=\"row\">\n  <div class=\"col-md-12\">\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <h5>{{'Order Driver' | translate}}</h5>\n        <div class=\"orders\">\n          <div class=\"card_div\">\n\n            <div class=\"resto_detail\">\n              <div class=\"back_image\" [style.backgroundImage]=\"'url('+restCover+')'\"></div>\n              <div style=\"margin-left: 20px;\">\n                <p class=\"res_name\">{{restName}}</p>\n                <p class=\"\">\n                  {{address}}\n                </p>\n              </div>\n\n              <div style=\"text-align: center;margin: 10px;\">\n                <div class=\"ti-angle-double-right\"></div>\n              </div>\n\n              <div class=\"back_image\" [style.backgroundImage]=\"'url('+userpic+')'\"></div>\n              <div style=\"margin-left: 20px;\">\n                <p class=\"res_name\">{{username}}</p>\n                <p class=\"\">\n                  {{userAddress}}\n                </p>\n              </div>\n            </div>\n\n            <div class=\"line_div\"></div>\n\n            <div class=\"order_detail\">\n              <p class=\"head_gray\">{{'ITEMS' | translate}}</p>\n              <div class=\"small_lbl\">\n                <!-- <span *ngFor=\"let order of orders;let ol = index\">{{order.quantiy}}\n                                    X {{order.name}} </span> -->\n                <span *ngFor=\"let order of orders;let ol = index\">\n                  <div *ngIf=\"!order.selectedItem || !order.selectedItem.length\" class=\"border_bottom\">\n                    {{order.name}} X {{order.quantiy}} <span *ngIf=\"ol !=order.length\">,</span>\n                  </div>\n\n                  <div *ngFor=\"let subItems of order.selectedItem;let j = index\" class=\"subNames\">\n                    <p class=\"food_title\">{{order.name}} X {{order.selectedItem[j].total}}</p>\n                    <div *ngFor=\"let addods of subItems.item\" class=\"flex_titles\">\n                      <p class=\"sub_name\">\n                        - {{addods.name}}\n                      </p>\n                      <p class=\"sub_name\">\n                        {{getCurrency()}} {{addods.value}}\n                      </p>\n                    </div>\n                  </div>\n                </span>\n              </div>\n              <p class=\"head_gray\">{{'ORDERED ON'| translate}}</p>\n              <p class=\"small_lbl\">{{getDate(time)}} </p>\n              <p class=\"head_gray\" *ngIf=\"coupon\">{{'Discount'| translate}}</p>\n              <p class=\"small_lbl\" *ngIf=\"coupon\">{{getCurrency()}} {{dicount}}\n              </p>\n              <p class=\"head_gray\">{{'TOTAL AMOUNT'| translate}}</p>\n              <p class=\"small_lbl\"> {{getCurrency()}} {{grandTotal}}</p>\n            </div>\n\n            <div class=\"line_div\"></div>\n\n            <div class=\"status_detail\" *ngIf=\"status =='completed' || status == 'delivered'\">\n              <div class=\"deliver_div\">\n                {{'Delivered' | translate}}\n              </div>\n            </div>\n            <div class=\"status_detail\" *ngIf=\"status =='rejected' || status == 'cancel'\">\n              <div class=\"deliver_div\">\n                {{'Your Order is' | translate}} {{status}}\n              </div>\n            </div>\n            <div class=\"status_detail\" *ngIf=\"status =='created' || status =='ongoing' || status === 'accepted'\">\n              <div class=\"deliver_div\">\n                {{'Your Order is' | translate}} {{status}}\n              </div>\n            </div>\n            \n          </div>\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <h5>{{'Select Driver' | translate}}</h5>\n              <div class=\"card_div\">\n                <div class=\"form-group row\">\n                  <div class=\"col-sm-6\">\n                    <label>{{'State' | translate}}</label>\n                    <select  [(ngModel)]=\"city\"  class=\"form-control\"  (ngModelChange)=\"changeDrivers(city)\">\n                        <option *ngFor=\"let item of cities;let i = index\" value=\"{{item.id}}\">{{item.name}}</option>\n                    </select>\n                    \n                </div>\n                <div class=\"col-sm-6\">\n                  <label>{{'Driver' | translate}}</label>\n                  <select  [(ngModel)]=\"driver\"  class=\"form-control\" >\n                      <option *ngFor=\"let item of driversByCity;let i = index\" value=\"{{item.id}}\">{{item.fullname}}</option>\n                  </select>\n                  \n              </div>\n              <div class=\"col-sm-6\" style=\"margin-top: 20px;\"><button type=\"button\" class=\"btn btn-success\" \n                (click)=\"setDriver()\">Set Driver</button>\n                </div>\n              </div>\n            </div>\n            </div>\n        </div>\n        \n      </div>\n      \n\n    </div>\n  </div>\n</div>\n\n<ng2-toasty></ng2-toasty>\n","import { Component, OnInit } from '@angular/core';\r\nimport { ApisService } from '../services/apis.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport * as moment from 'moment';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { UtilService } from \"src/app/services/util.service\";\r\nimport { ToastData, ToastOptions, ToastyService } from 'ng2-toasty';\r\nimport { Location } from '@angular/common';\r\nimport Swal from 'sweetalert2';\r\n@Component({\r\n  selector: 'app-orderdriver',\r\n  templateUrl: './orderdriver.component.html',\r\n  styleUrls: ['./orderdriver.component.scss']\r\n})\r\nexport class OrderdriverComponent implements OnInit {\r\n  id: any;\r\n  grandTotal: any;\r\n  orders: any[] = [];\r\n  serviceTax: any;\r\n  status: any;\r\n  time: any;\r\n  total: any;\r\n  uid: any;\r\n  address: any;\r\n  restName: any;\r\n  deliveryAddress: any;\r\n  paid: any;\r\n  restPhone: any;\r\n  coupon: boolean = false;\r\n  dicount: any;\r\n  dname: any;\r\n  restCover: any;\r\n  username: any;\r\n  userpic: any;\r\n  userAddress: any;\r\n  refund: boolean;\r\n  payKey: any;\r\n  city: any = '';\r\n  cities: any;\r\n  dummy = Array(50);\r\n  drivers: any[] = [];\r\n  driver: any;\r\n  dummyDrivers: any[] = [];\r\n  driversByCity: any[] =  [];\r\n  driverToken: any;\r\n  constructor(\r\n    private api: ApisService,\r\n    private util: UtilService,\r\n    private route: ActivatedRoute,\r\n    private spinner: NgxSpinnerService,\r\n    private toastyService: ToastyService,\r\n    private navCtrl: Location\r\n  ) {\r\n    this.route.queryParams.subscribe(data => {\r\n      console.log(data);\r\n      if (data && data.id) {\r\n        this.id = data.id;\r\n        this.getOrder();\r\n        this.getUsers();\r\n            this.getCity();\r\n          \r\n      }\r\n    });\r\n  }\r\n  getOrder() {\r\n    this.spinner.show();\r\n    console.log(\"idd\",this.id)\r\n    this.api.getOrderById(this.id).then(data => {\r\n      this.spinner.hide();\r\n      console.log(data);\r\n      if (data) {\r\n        this.grandTotal = data.grandTotal;\r\n        this.orders = JSON.parse(data.order);\r\n        this.serviceTax = data.serviceTax;\r\n        this.status = data.status;\r\n        this.time = data.time;\r\n        if (data && data.dId && data.dId.fullname) {\r\n          this.dname = data.dId.fullname || '';\r\n        }\r\n        this.username = data.uid.fullname || '';\r\n        this.userpic = data.uid && data.uid.cover ? data.uid.cover : 'assets/icon.png';\r\n        this.userAddress = data.address.address;\r\n        this.restCover = data.vid.cover;\r\n        this.total = data.total;\r\n        this.address = data.vid.address;\r\n        this.restName = data.vid.name;\r\n        this.deliveryAddress = data.address.address;\r\n        this.paid = data.paid;\r\n        console.log('this', this.orders);\r\n        this.coupon = data.appliedCoupon;\r\n        this.dicount = data.dicount;\r\n        if (data && data.paykey && data.paid !== 'paypal') {\r\n          this.refund = true;\r\n          this.payKey = data.paykey;\r\n        } else {\r\n          this.refund = false;\r\n        }\r\n      }\r\n    }).catch(error => {\r\n      this.spinner.hide();\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n  getDate(date) {\r\n    return moment(date).format('llll');\r\n  }\r\n\r\n  refundIt() {\r\n    console.log('id', this.id, this.refund, this.payKey);\r\n    Swal.fire({\r\n      title: this.api.translate('Are you sure?'),\r\n      text: this.api.translate('to reject and refund this order?'),\r\n      backdrop: false,\r\n      background: 'white',\r\n      confirmButtonText: this.api.translate('Reject & Refund'),\r\n      cancelButtonText: this.api.translate('Cancle'),\r\n      showConfirmButton: true,\r\n      showCancelButton: true,\r\n      icon: 'question'\r\n    }).then((data) => {\r\n      console.log(data);\r\n      if (data && data.value) {\r\n        console.log('->delete');\r\n        this.spinner.show();\r\n        this.api.updateOrderStatus(this.id, 'rejected').then((data: any) => {\r\n          const param = {\r\n            charge: this.payKey,\r\n          };\r\n          this.api.httpPost('https://api.stripe.com/v1/refunds', param).subscribe((data) => {\r\n            console.log(data);\r\n            Swal.fire({\r\n              title: this.api.translate('Success'),\r\n              text: this.api.translate('Order refund successfully'),\r\n              icon: 'success',\r\n            });\r\n            this.navCtrl.back();\r\n          }, error => {\r\n            console.log(error);\r\n            this.spinner.hide();\r\n            console.log();\r\n            if (error && error.error && error.error.error && error.error.error.message) {\r\n              this.error(error.error.error.message);\r\n              return false;\r\n            }\r\n            this.error(this.api.translate('Something went wrong'));\r\n          });\r\n        }).catch(error => {\r\n          this.spinner.hide();\r\n          console.log(error);\r\n          this.error(this.api.translate('Something went wrong'));\r\n        });\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n\r\n  error(message) {\r\n    const toastOptions: ToastOptions = {\r\n      title: this.api.translate('Error'),\r\n      msg: message,\r\n      showClose: true,\r\n      timeout: 2000,\r\n      theme: 'default',\r\n      onAdd: (toast: ToastData) => {\r\n        console.log('Toast ' + toast.id + ' has been added!');\r\n      },\r\n      onRemove: function (toast: ToastData) {\r\n        console.log('Toast ' + toast.id + ' has been removed!');\r\n      }\r\n    };\r\n    // Add see all possible types in one shot\r\n    this.toastyService.error(toastOptions);\r\n  }\r\n  success(message) {\r\n    const toastOptions: ToastOptions = {\r\n      title: this.api.translate('Success'),\r\n      msg: message,\r\n      showClose: true,\r\n      timeout: 2000,\r\n      theme: 'default',\r\n      onAdd: (toast: ToastData) => {\r\n        console.log('Toast ' + toast.id + ' has been added!');\r\n      },\r\n      onRemove: function (toast: ToastData) {\r\n        console.log('Toast ' + toast.id + ' has been removed!');\r\n      }\r\n    };\r\n    // Add see all possible types in one shot\r\n    this.toastyService.success(toastOptions);\r\n  }\r\n\r\n  reject() {\r\n    Swal.fire({\r\n      title: this.api.translate('Are you sure?'),\r\n      text: this.api.translate('to reject this order?'),\r\n      backdrop: false,\r\n      background: 'white',\r\n      confirmButtonText: this.api.translate('Reject'),\r\n      cancelButtonText: this.api.translate('Cancle'),\r\n      showConfirmButton: true,\r\n      showCancelButton: true,\r\n      icon: 'question'\r\n    }).then((data) => {\r\n      console.log(data);\r\n      if (data && data.value) {\r\n        console.log('->delete');\r\n        this.spinner.show();\r\n        this.api.updateOrderStatus(this.id, 'rejected').then((data: any) => {\r\n          this.spinner.hide();\r\n          Swal.fire({\r\n            title: this.api.translate('Success'),\r\n            text: this.api.translate('Order rejected successfully'),\r\n            icon: 'success',\r\n          });\r\n          this.navCtrl.back();\r\n        }).catch(error => {\r\n          this.spinner.hide();\r\n          console.log(error);\r\n          this.error(this.api.translate('Something went wrong'));\r\n        });\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  getCity() {\r\n    this.api.getCities().then(data => {\r\n      console.log(data);\r\n      this.cities = data;\r\n      this.city = data[0].id;\r\n      this.changeDrivers(this.city);\r\n      this.dummy = [];\r\n    }).catch(error => {\r\n      console.log(error);\r\n      this.dummy = [];\r\n    });\r\n  }\r\n\r\n\r\n  getUsers() {\r\n    this.drivers = [];\r\n    this.dummyDrivers = [];\r\n    this.driversByCity = [];\r\n    this.api.getUsers().then((data) => {\r\n      \r\n      console.log('users data', data);\r\n      data.forEach(element => {\r\n        if (element.type === 'delivery') {\r\n          this.drivers.push(element);\r\n          this.dummyDrivers.push(element);\r\n        }\r\n      });\r\n      console.log(this.drivers);\r\n    }, error => {\r\n      console.log(error);\r\n    }).catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  getCurrency() {\r\n    return this.api.getCurrecySymbol();\r\n  }\r\n\r\n  changeDrivers(city){\r\n      console.log(\"Drivers\",this.drivers)\r\n      console.log(\"city\",this.city)\r\n    this.driversByCity = []\r\n    this.drivers.forEach(element => {\r\n        if (element.city === city && element.isActive) {\r\n          this.driversByCity.push(element);\r\n          \r\n        }\r\n        \r\n        \r\n      });\r\n      setTimeout(()=>{\r\n          if(this.driversByCity.length>0){\r\n            console.log(this.driversByCity)\r\n            this.driver = this.driversByCity[0].id \r\n            this.driverToken = this.driversByCity[0].fcm_token\r\n          }\r\n      },500)\r\n  }\r\n\r\n\r\n  setDriver() {\r\n      \r\n    const param = {\r\n        driverId: this.driver,\r\n        status: \"accepted\"\r\n      };\r\n      const value = \"accepted\";\r\n      \r\n      console.log(param)\r\n      this.api\r\n        .updateOrder(this.id, param)\r\n        .then(data => {\r\n          \r\n          const parm = {\r\n            current: \"busy\"\r\n          };\r\n          this.api\r\n            .updateProfile(this.driver, parm)\r\n            .then(data => {\r\n              console.log(data);\r\n            })\r\n            .catch(error => {\r\n              console.log(error);\r\n            });\r\n          if (this.drivers[0] && this.drivers[0].fcm_token !== \"\") {\r\n            this.api\r\n              .sendNotification2(\r\n                \"New Order Received \",\r\n                \"New Order\",\r\n                this.driverToken\r\n              )\r\n              .subscribe(\r\n                data => {\r\n                  console.log(\"send notifications\", data);\r\n                },\r\n                error => {\r\n                  console.log(error);\r\n                }\r\n              );\r\n          }\r\n  \r\n  \r\n          console.log(\"data\", data);\r\n          const msg =\r\n            \"Your Order is \" +\r\n            value +\r\n            \" By \" +\r\n            this.restName;\r\n          \r\n          Swal.fire({\r\n            title:\"success\",\r\n            text: \"Order status changed to \" + value,\r\n            icon: \"success\",\r\n            timer: 2000,\r\n            backdrop: false,\r\n            background: \"white\"\r\n          });\r\n          this.navCtrl.back();\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { OrderdriverRoutingModule } from './orderdriver-routing.module';\r\nimport { OrderdriverComponent } from './orderdriver.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\n\r\n\r\n@NgModule({\r\n  declarations: [OrderdriverComponent],\r\n  imports: [\r\n    CommonModule,\r\n    OrderdriverRoutingModule,\r\n    SharedModule,\r\n    NgxSpinnerModule\r\n  ]\r\n})\r\nexport class OrderdriverModule { }\r\n","import { environment } from 'src/environments/environment';\nimport { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilService {\n\n  report: any;\n  constructor(\n\n    private translateService: TranslateService\n  ) { }\n\n  translate(str) {\n    const currentLang = this.translateService.currentLang;\n    const returnValue = this.translateService.translations[currentLang][str];\n    if (returnValue === undefined) {\n      return this.translateService.translations.en_merch[str];\n    } else {\n      return returnValue;\n    }\n  }\n  setReport(data) {\n    this.report = data;\n  }\n\n  \n  getReport() {\n    return this.report;\n  }\n\n  getCurrencyCode() {\n    return environment.general.code;\n  }\n\n  getCurrecySymbol() {\n    return environment.general.symbol;\n  }\n  makeid(length) {\n    let result = '';\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    const charactersLength = characters.length;\n    for (let i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  }\n}\n"],"sourceRoot":"webpack:///"}