{"version":3,"sources":["./node_modules/ng2-toasty/src/toast.component.d.ts.ToastComponent.html","./node_modules/ng2-toasty/src/toasty.component.d.ts.ToastyComponent.html","./src/app/setup/setup-routing.module.ts","./src/app/setup/setup.component.html","./src/app/setup/setup.component.ts","./src/app/setup/setup.module.ts"],"names":[],"mappings":"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","file":"setup-setup-module-ngfactory-es2015.js","sourcesContent":["\n        <div class=\"toast\" [ngClass]=\"[toast.type, toast.theme]\">\n            <div *ngIf=\"toast.showClose\" class=\"close-button\" (click)=\"close($event)\"></div>\n            <div *ngIf=\"toast.title || toast.msg\" class=\"toast-text\">\n                <span *ngIf=\"toast.title\" class=\"toast-title\" [innerHTML]=\"toast.title | safeHtml\"></span>\n                <br *ngIf=\"toast.title && toast.msg\" />\n                <span *ngIf=\"toast.msg\" class=\"toast-msg\" [innerHtml]=\"toast.msg | safeHtml\"></span>\n            </div>\n        </div>","\n    <div id=\"toasty\" [ngClass]=\"[position]\">\n        <ng2-toast *ngFor=\"let toast of toasts\" [toast]=\"toast\" (closeToast)=\"closeToast(toast)\"></ng2-toast>\n    </div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SetupComponent } from './setup.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SetupComponent,\n    data: {\n      breadcrumb: 'Setup'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SetupRoutingModule { }\n","<ngx-spinner type=\"ball-pulse-sync\" color=\"#e74c3c\">\n  <p style=\"font-size: 20px; color: #e74c3c\">{{ \"Log in...\" | translate }}</p>\n</ngx-spinner>\n<section class=\"login p-fixed d-flex text-center bg-light \">\n  <div class=\"auth-fluid\">\n    <div class=\"row\">\n      <div class=\"col-sm-12\">\n        <div class=\"login-card card-body auth-body\">\n          <form class=\"md-float-material\">\n            <div class=\"text-center\">\n              <h1 class=\"title-admin-goby\">Admin Yochivoy</h1>\n            </div>\n            <div class=\"auth-box\">\n              <div class=\"row m-b-20\">\n                <div class=\"col-md-12\">\n                  <h3 class=\"text-left txt-primary\">\n                    {{ \"Welcome to Setup Wizard\" | translate }}\n                  </h3>\n                  <p class=\"text-left txt-primary\">\n                    {{ \"Create Admin Profile\" | translate }}\n                  </p>\n                </div>\n              </div>\n              <hr />\n              <div class=\"input-group\">\n                <input\n                  type=\"email\"\n                  class=\"form-control\"\n                  [placeholder]=\"('Your Email Address' | translate) || '&nbsp;'\"\n                  [(ngModel)]=\"email\"\n                  [ngModelOptions]=\"{ standalone: true }\"\n                />\n                <span class=\"md-line\"></span>\n              </div>\n              <div class=\"input-group\">\n                <input\n                  type=\"password\"\n                  class=\"form-control\"\n                  [placeholder]=\"('Password' | translate) || '&nbsp;'\"\n                  [(ngModel)]=\"password\"\n                  [ngModelOptions]=\"{ standalone: true }\"\n                />\n                <span class=\"md-line\"></span>\n              </div>\n              <div class=\"row m-t-30\">\n                <div class=\"col-md-12\">\n                  <button\n                    type=\"button\"\n                    (click)=\"login()\"\n                    class=\"btn btn-danger btn-md btn-block waves-effect text-center m-b-20\"\n                  >\n                    {{ \"Create Admin Profile\" | translate }}\n                  </button>\n                </div>\n                <div class=\"btns\">\n                  <img\n                    src=\"assets/en.png\"\n                    (click)=\"changeLng('en')\"\n                    [ngClass]=\"\n                      getClassName() == 'en' ? 'flagActive' : 'flagDeactive'\n                    \"\n                    alt=\"\"\n                  />\n                  <img\n                    src=\"assets/spanish.png\"\n                    (click)=\"changeLng('spanish')\"\n                    [ngClass]=\"\n                      getClassName() == 'spanish'\n                        ? 'flagActive'\n                        : 'flagDeactive'\n                    \"\n                    alt=\"\"\n                  />\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<ng2-toasty></ng2-toasty>\n","import { Component, OnInit } from '@angular/core';\nimport { ApisService } from 'src/app/services/apis.service';\nimport { ToastData, ToastOptions, ToastyService } from 'ng2-toasty';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { TranslateService } from '@ngx-translate/core';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-setup',\n  templateUrl: './setup.component.html',\n  styleUrls: ['./setup.component.scss']\n})\nexport class SetupComponent implements OnInit {\n  email: any = '';\n  password: any = '';\n  constructor(\n    private api: ApisService,\n    private toastyService: ToastyService,\n    private router: Router,\n    private spinner: NgxSpinnerService,\n    private translate: TranslateService\n  ) {\n    const lng = localStorage.getItem('lng');\n    if (!lng || lng === null) {\n      localStorage.setItem('lng', 'en');\n    }\n    this.translate.use(localStorage.getItem('lng'));\n  }\n\n  ngOnInit() {\n    document.querySelector('body').setAttribute('themebg-pattern', 'theme1');\n    console.log('hello');\n    this.api.getUsers().then((data: any) => {\n      console.log(data);\n      if (data && data.length > 0) {\n        this.router.navigate(['auth/login']);\n      }\n    });\n  }\n  login() {\n    if (!this.email || !this.password) {\n      this.error(this.api.translate('All Fields are required'));\n      return false;\n    }\n    this.spinner.show();\n    this.api.createAdminProfile(this.email, this.password).then((data) => {\n      console.log(data);\n      this.spinner.hide();\n      Swal.fire({\n        title: this.api.translate('Admin Profile Created'),\n        text: this.api.translate('Please Login with your credentials'),\n        icon: 'success'\n      });\n      this.router.navigate(['auth/login']);\n    }, error => {\n      this.spinner.hide();\n      this.error(error);\n    }).catch(error => {\n      this.spinner.hide();\n      console.log(error);\n      this.error(error);\n    });\n  }\n\n  error(message) {\n    const toastOptions: ToastOptions = {\n      title: this.api.translate('Error'),\n      msg: message,\n      showClose: true,\n      timeout: 2000,\n      theme: 'default',\n      onAdd: (toast: ToastData) => {\n        console.log('Toast ' + toast.id + ' has been added!');\n      },\n      onRemove: function (toast: ToastData) {\n        console.log('Toast ' + toast.id + ' has been removed!');\n      }\n    };\n    // Add see all possible types in one shot\n    this.toastyService.error(toastOptions);\n  }\n  success(message) {\n    const toastOptions: ToastOptions = {\n      title: this.api.translate('Success'),\n      msg: message,\n      showClose: true,\n      timeout: 2000,\n      theme: 'default',\n      onAdd: (toast: ToastData) => {\n        console.log('Toast ' + toast.id + ' has been added!');\n      },\n      onRemove: function (toast: ToastData) {\n        console.log('Toast ' + toast.id + ' has been removed!');\n      }\n    };\n    // Add see all possible types in one shot\n    this.toastyService.success(toastOptions);\n  }\n  getClassName() {\n    return localStorage.getItem('lng');\n  }\n  changeLng(lng) {\n    localStorage.setItem('lng', lng);\n    this.translate.use(lng);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SetupRoutingModule } from './setup-routing.module';\nimport { SetupComponent } from './setup.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\n\n@NgModule({\n  declarations: [SetupComponent],\n  imports: [\n    CommonModule,\n    SetupRoutingModule,\n    SharedModule,\n    NgxSpinnerModule\n  ]\n})\nexport class SetupModule { }\n"],"sourceRoot":"webpack:///"}