{"version":3,"sources":["./src/app/banners/banners-routing.module.ts","./src/app/banners/banners.component.html","./src/app/banners/banners.component.ts","./src/app/banners/banners.module.ts"],"names":[],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACA;WAO7C;IACJ,UAAU,EAAE,SAAS;CACtB;AANL,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mEAAgB;QAC3B,IAAI,IAEH;KACF;CACF,CAAC;AAMK,MAAM,oBAAoB;CAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sGCgBT,uHAA+B,KAC3B,sHAAI,KACA,omBAIG,GAJ4B,gGAI7B,MAEN,sHAAI,KACA,omBAIG,GAJ4B,gGAI7B,MAEN,sHAAI,KACA,smBAIG,GAJ4B,iGAI7B,MAEN,uHAAI,KACA,smBAIG,GAJ4B,iGAI7B,2BAzBmB,mBAAS,EAAC,8DAI7B,GAJF,YAIG,EAJkB,SAAS,EAAC,SAI7B,GAGmB,mBAAS,EAAC,8DAI7B,GAJF,YAIG,EAJkB,SAAS,EAAC,SAI7B,GAGmB,mBAAS,EAAC,+DAI7B,GAJF,aAIG,EAJkB,SAAS,EAAC,SAI7B,GAGmB,mBAAS,EAAC,+DAI7B,GAJF,aAIG,EAJkB,SAAS,EAAC,SAI7B;sGAGV,uHAA+C,KAC3C,sHAAI,kJAAuB,oRAE6C,KAExE,sHAAI,gFAAa,MACjB,sHAAI,sNACiC,YAA7B;;wBAA4B;MADhC,wBACiC,gFAAe,MAEpD,sHAAI,kQAC0D,YADpC;;wBAAsB;MAA5C,wBAC0D,0VAAwB,wDARtC,kBAAmB,2BADxC,YAE6C,EADxB,SAAmB,GAG/D,kEAAa,GACS,+BAAmC,4BAAzD,YACiC,EADX,SAAmC,GACxB,oEAAe,GAGU,uLAAwB;sGA3EtH,8rBAAoD,IAChD,8JAA2C,yVAAgC,KAE/E,wIAAiB,KACb,6IAAuB,KAGvB,8IAAuB,KACnB,yIAAkB,KACd,6IAAuB,KACnB,uHAAI,2VAA8B,KAGtC,iKAAyC,KACrC,mJAA4B,KACxB,6IAAsB,KAEtB,6IAAsB,KAEtB,6IAAsB,KAClB,oQACqC,YADO;;wBAAqB;MAAjE,wBACqC,0VAA4B,KAGzE,sJAA8B,KAC1B,yJAAiC,KAC7B,2HAAO,KACH,mJAA2B,KACvB,uHAAI,0VAAuB,KAC3B,uHAAI,0VAA6B,KACjC,uHAAI,0VAAwB,KAC5B,uHAAI,0VAAwB,KAGpC,0HAAO,KACH,mdAA+B,IA8B/B,mdAA+C,iDAjEvC,yBAAe,EAAtC,iCAAsB,EAAnC,YAAoD,EAAhB,SAAe,EAAtC,SAAsB,GAmCH,mBAA0B,QAA9B,aAA+B,EAA3B,SAA0B,GA8B1B,oBAA0C,UAA9C,aAA+C,EAA3C,UAA0C,2BAhE3B,4LAAgC,GAS3D,4LAA8B,GAWW,2LAA4B,GAOrD,sLAAuB,GACvB,4LAA6B,GAC7B,uLAAwB,GACxB,uLAAwB;;;;;;;;;;;;;;;;AC/B5D;AAAA;AAAA;AAAA;AAAA;AAAkD;AAGnB;AAOxB,MAAM,gBAAgB;IAG3B,YACU,MAAc,EACd,GAAgB,EAChB,OAA0B;QAF1B,WAAM,GAAN,MAAM,CAAQ;QACd,QAAG,GAAH,GAAG,CAAa;QAChB,YAAO,GAAP,OAAO,CAAmB;QALpC,UAAK,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;QAClB,YAAO,GAAU,EAAE,CAAC;QAMlB,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YAChC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;YACf,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAChB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,QAAQ;IACR,CAAC;IACD,SAAS;QACP,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;IAC5C,CAAC;IACD,QAAQ,CAAC,IAAI;QACX,IAAI,IAAI,KAAK,QAAQ,EAAE;YACrB,OAAO,2BAA2B,CAAC;SACpC;aAAM,IAAI,IAAI,KAAK,UAAU,EAAE;YAC9B,OAAO,0BAA0B,CAAC;SACnC;QACD,OAAO,2BAA2B,CAAC;IACrC,CAAC;IACD,YAAY,CAAC,IAAI;QACf,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,CAAC;QAC9D,kDAAI,CAAC,IAAI,CAAC;YACR,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,eAAe,CAAC;YAC1C,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,eAAe,CAAC;YAC5E,IAAI,EAAE,UAAU;YAChB,iBAAiB,EAAE,IAAI;YACvB,iBAAiB,EAAE,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC;YAC5C,gBAAgB,EAAE,IAAI;YACtB,gBAAgB,EAAE,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC;YAC9C,QAAQ,EAAE,KAAK;YACf,UAAU,EAAE,OAAO;SACpB,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;YACf,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;gBACtB,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;gBACzB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACpB,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;oBACxC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;oBACpB,IAAI,CAAC,UAAU,EAAE,CAAC;gBACpB,CAAC,EAAE,KAAK,CAAC,EAAE;oBACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACnB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACtB,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;oBACf,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;oBACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACrB,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,MAAM,CAAC,IAAI;QACT,kDAAI,CAAC,IAAI,CAAC;YACR,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,eAAe,CAAC;YAC1C,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,wBAAwB,CAAC;YAClD,IAAI,EAAE,UAAU;YAChB,iBAAiB,EAAE,IAAI;YACvB,iBAAiB,EAAE,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC;YAC5C,gBAAgB,EAAE,IAAI;YACtB,gBAAgB,EAAE,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC;YAC9C,QAAQ,EAAE,KAAK;YACf,UAAU,EAAE,OAAO;SACpB,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;YACf,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;gBACtB,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;gBACzB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACpB,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;oBACxC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;oBACpB,IAAI,CAAC,UAAU,EAAE,CAAC;gBACpB,CAAC,EAAE,KAAK,CAAC,EAAE;oBACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACnB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACtB,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;oBACf,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;oBACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACrB,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnFD;AAAA;AAAO,MAAM,aAAa;CAAI","file":"banners-banners-module-ngfactory-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BannersComponent } from './banners.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BannersComponent,\n    data: {\n      breadcrumb: 'Banners'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BannersRoutingModule { }\n","<ngx-spinner type=\"ball-pulse-sync\" color=\"#e74c3c\">\n    <p style=\"font-size: 20px; color: #e74c3c\">{{'Please wait...' | translate}}</p>\n</ngx-spinner>\n<div class=\"row\">\n    <div class=\"col-sm-12\">\n\n    </div>\n    <div class=\"col-md-12\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h5>{{'All Banners' | translate}} </h5>\n            </div>\n\n            <div class=\"card-body reset-table p-t-0\">\n                <div class=\"form-group row\">\n                    <div class=\"col-sm-4\">\n                    </div>\n                    <div class=\"col-sm-4\">\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <button style=\"float: right;\" type=\"button\" (click)=\"createNew()\"\n                            class=\"btn btn-danger btn-round\">{{'CREATE NEW' | translate}}</button>\n                    </div>\n                </div>\n                <div class=\"table-responsive\">\n                    <table class=\"table table-hover\">\n                        <thead>\n                            <tr class=\"text-uppercase\">\n                                <th>{{'Cover' | translate}}</th>\n                                <th>{{'Restaurants' | translate}}</th>\n                                <th>{{'Status' | translate}}</th>\n                                <th>{{'Action' | translate}}</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let item of dummy\">\n                                <td>\n                                    <ngx-skeleton-loader count=\"1\" [theme]=\"{ \n                                    'border-radius': '5px',\n                                    height: '10px',\n                                    border: '1px solid white'\n                                    }\"></ngx-skeleton-loader>\n                                </td>\n                                <td>\n                                    <ngx-skeleton-loader count=\"1\" [theme]=\"{ \n                                    'border-radius': '5px',\n                                    height: '10px',\n                                    border: '1px solid white'\n                                    }\"></ngx-skeleton-loader>\n                                </td>\n                                <td>\n                                    <ngx-skeleton-loader count=\"1\" [theme]=\"{ \n                                    'border-radius': '5px',\n                                    height: '10px',\n                                    border: '1px solid white'\n                                    }\"></ngx-skeleton-loader>\n                                </td>\n                                <td>\n                                    <ngx-skeleton-loader count=\"1\" [theme]=\"{ \n                                    'border-radius': '5px',\n                                    height: '10px',\n                                    border: '1px solid white'\n                                    }\"></ngx-skeleton-loader>\n                                </td>\n                            </tr>\n                            <tr *ngFor=\"let item of banners;let i = index\">\n                                <td><a href=\"javascript:;\"><img class=\"img-responsive\"\n                                            style=\"height: 100px;width: 100px;\" [src]=\"item.banner\"\n                                            onError=\"this.src='assets/images/user.png'\" alt=\"chat-user\"></a>\n                                </td>\n                                <td>{{item.name}}</td>\n                                <td><button type=\"button\" [className]=\"getClass(item.status)\"\n                                        (click)=\"changeStatus(item)\">{{item.status}}</button>\n                                </td>\n                                <td><button type=\"button\" (click)=\"delete(item)\"\n                                        class=\"btn btn-success btn-round btn-outline-success\">{{'Delete' | translate}}</button>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApisService } from '../services/apis.service';\nimport Swal from 'sweetalert2';\nimport { NgxSpinnerService } from 'ngx-spinner';\n@Component({\n  selector: 'app-banners',\n  templateUrl: './banners.component.html',\n  styleUrls: ['./banners.component.css']\n})\nexport class BannersComponent implements OnInit {\n  dummy = Array(10);\n  banners: any[] = [];\n  constructor(\n    private router: Router,\n    private api: ApisService,\n    private spinner: NgxSpinnerService,\n  ) {\n    this.getBanners();\n  }\n\n  getBanners() {\n    this.api.getBanners().then(data => {\n      console.log(data);\n      this.dummy = [];\n      this.banners = data;\n    }).catch(error => {\n      this.dummy = [];\n      console.log(error);\n    });\n  }\n  ngOnInit() {\n  }\n  createNew() {\n    this.router.navigate(['admin-newbanner']);\n  }\n  getClass(item) {\n    if (item === 'active') {\n      return 'btn btn-primary btn-round';\n    } else if (item === 'deactive') {\n      return 'btn btn-danger btn-round';\n    }\n    return 'btn btn-warning btn-round';\n  }\n  changeStatus(item) {\n    const text = item.status === 'active' ? 'deactive' : 'active';\n    Swal.fire({\n      title: this.api.translate('Are you sure?'),\n      text: this.api.translate('To ') + text + this.api.translate(' this banner!'),\n      icon: 'question',\n      showConfirmButton: true,\n      confirmButtonText: this.api.translate('Yes'),\n      showCancelButton: true,\n      cancelButtonText: this.api.translate('Cancle'),\n      backdrop: false,\n      background: 'white'\n    }).then((data) => {\n      if (data && data.value) {\n        console.log('update it');\n        item.status = text;\n        console.log(item);\n        this.spinner.show();\n        this.api.updateBanner(item).then((data) => {\n          this.spinner.hide();\n          this.getBanners();\n        }, error => {\n          console.log(error);\n          this.spinner.hide();\n        }).catch(error => {\n          this.spinner.hide();\n          console.log(error);\n        });\n      }\n    });\n  }\n  delete(item) {\n    Swal.fire({\n      title: this.api.translate('Are you sure?'),\n      text: this.api.translate('To delete this banner!'),\n      icon: 'question',\n      showConfirmButton: true,\n      confirmButtonText: this.api.translate('Yes'),\n      showCancelButton: true,\n      cancelButtonText: this.api.translate('Cancle'),\n      backdrop: false,\n      background: 'white'\n    }).then((data) => {\n      if (data && data.value) {\n        console.log('update it');\n        this.spinner.show();\n        this.api.deleteBanner(item).then((data) => {\n          this.spinner.hide();\n          this.getBanners();\n        }, error => {\n          console.log(error);\n          this.spinner.hide();\n        }).catch(error => {\n          this.spinner.hide();\n          console.log(error);\n        });\n      }\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BannersRoutingModule } from './banners-routing.module';\nimport { BannersComponent } from './banners.component';\nimport { NgxSkeletonLoaderModule } from 'ngx-skeleton-loader';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { SharedModule } from '../shared/shared.module';\n\n\n@NgModule({\n  declarations: [BannersComponent],\n  imports: [\n    CommonModule,\n    BannersRoutingModule,\n    NgxSkeletonLoaderModule,\n    NgxSpinnerModule,\n    SharedModule\n  ]\n})\nexport class BannersModule { }\n"],"sourceRoot":"webpack:///"}