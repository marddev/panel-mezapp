{"version":3,"sources":["./node_modules/ng2-toasty/src/toast.component.d.ts.ToastComponent.html","./node_modules/ng2-toasty/src/toasty.component.d.ts.ToastyComponent.html","./src/app/notification/notification-routing.module.ts","./src/app/notification/notification.component.html","./src/app/notification/notification.component.ts","./src/app/notification/notification.module.ts"],"names":[],"mappings":"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","file":"notification-notification-module-ngfactory-es2015.js","sourcesContent":["\n        <div class=\"toast\" [ngClass]=\"[toast.type, toast.theme]\">\n            <div *ngIf=\"toast.showClose\" class=\"close-button\" (click)=\"close($event)\"></div>\n            <div *ngIf=\"toast.title || toast.msg\" class=\"toast-text\">\n                <span *ngIf=\"toast.title\" class=\"toast-title\" [innerHTML]=\"toast.title | safeHtml\"></span>\n                <br *ngIf=\"toast.title && toast.msg\" />\n                <span *ngIf=\"toast.msg\" class=\"toast-msg\" [innerHtml]=\"toast.msg | safeHtml\"></span>\n            </div>\n        </div>","\n    <div id=\"toasty\" [ngClass]=\"[position]\">\n        <ng2-toast *ngFor=\"let toast of toasts\" [toast]=\"toast\" (closeToast)=\"closeToast(toast)\"></ng2-toast>\n    </div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NotificationComponent } from './notification.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NotificationComponent,\n    data: {\n      breadcrumb: 'Notifications'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class NotificationRoutingModule { }\n","<div class=\"row\">\n    <div class=\"col-md-12\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h5>{{'Send Notification' | translate}} </h5>\n            </div>\n            <div class=\"card-body reset-table p-t-0\">\n                <div class=\"form-group row\">\n                    <label class=\"col-sm-2 col-form-label\">{{'Title'| translate}}</label>\n                    <div class=\"col-sm-10\">\n                        <input type=\"text\" [(ngModel)]=\"title\"\n                            [placeholder]=\"('Notification Title' | translate) || '&nbsp;'\" class=\"form-control\">\n                    </div>\n                </div>\n                <div class=\"form-group row\">\n                    <label class=\"col-sm-2 col-form-label\">{{'Description'| translate}}</label>\n                    <div class=\"col-sm-10\">\n                        <textarea rows=\"5\" cols=\"5\" [(ngModel)]=\"descriptions\" class=\"form-control\"\n                            [placeholder]=\"('Description (short description)' | translate) || '&nbsp;'\"></textarea>\n                    </div>\n                </div>\n                <div class=\"form-group row\">\n                    <label class=\"col-sm-2 col-form-label\"></label>\n                    <div class=\"col-sm-10\">\n                        <button class=\"btn btn-danger btn-round\"\n                            (click)=\"send()\">{{'Send Message' | translate}}</button>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</div>\n<ng2-toasty></ng2-toasty>","import { Component, OnInit } from '@angular/core';\nimport { ToastData, ToastOptions, ToastyService } from 'ng2-toasty';\nimport { ApisService } from '../services/apis.service';\n@Component({\n  selector: 'app-notification',\n  templateUrl: './notification.component.html',\n  styleUrls: ['./notification.component.css']\n})\nexport class NotificationComponent implements OnInit {\n  title: any;\n  descriptions: any;\n  constructor(\n    private api: ApisService,\n    private toastyService: ToastyService,\n  ) { }\n\n  ngOnInit() {\n  }\n  send() {\n    if (!this.title || !this.descriptions) {\n      this.error(this.api.translate('All Fields are required'));\n      return false;\n    }\n    this.api.sendNotification(this.descriptions, this.title).subscribe((data) => {\n      console.log(data);\n      this.title = '';\n      this.descriptions = '';\n      this.success(this.api.translate('Notications sent'));\n    }, error => {\n      console.log(error);\n      this.error(this.api.translate('Something went wrong'));\n    });\n\n  }\n  error(message) {\n    const toastOptions: ToastOptions = {\n      title: 'Error',\n      msg: message,\n      showClose: true,\n      timeout: 2000,\n      theme: 'default',\n      onAdd: (toast: ToastData) => {\n        console.log('Toast ' + toast.id + ' has been added!');\n      },\n      onRemove: function (toast: ToastData) {\n        console.log('Toast ' + toast.id + ' has been removed!');\n      }\n    };\n    // Add see all possible types in one shot\n    this.toastyService.error(toastOptions);\n  }\n  success(message) {\n    const toastOptions: ToastOptions = {\n      title: 'Success',\n      msg: message,\n      showClose: true,\n      timeout: 2000,\n      theme: 'default',\n      onAdd: (toast: ToastData) => {\n        console.log('Toast ' + toast.id + ' has been added!');\n      },\n      onRemove: function (toast: ToastData) {\n        console.log('Toast ' + toast.id + ' has been removed!');\n      }\n    };\n    // Add see all possible types in one shot\n    this.toastyService.success(toastOptions);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NotificationRoutingModule } from './notification-routing.module';\nimport { NotificationComponent } from './notification.component';\nimport { SharedModule } from '../shared/shared.module';\n\n\n@NgModule({\n  declarations: [NotificationComponent],\n  imports: [\n    CommonModule,\n    NotificationRoutingModule,\n    SharedModule\n  ]\n})\nexport class NotificationModule { }\n"],"sourceRoot":"webpack:///"}