{"version":3,"sources":["src/app/banners/banners-routing.module.ts","src/app/banners/banners.component.html","src/app/banners/banners.component.ts","src/app/banners/banners.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BannersComponent } from './banners.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BannersComponent,\n    data: {\n      breadcrumb: 'Banners'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BannersRoutingModule { }\n","<ngx-spinner type=\"ball-pulse-sync\" color=\"#e74c3c\">\n    <p style=\"font-size: 20px; color: #e74c3c\">{{'Please wait...' | translate}}</p>\n</ngx-spinner>\n<div class=\"row\">\n    <div class=\"col-sm-12\">\n\n    </div>\n    <div class=\"col-md-12\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h5>{{'All Banners' | translate}} </h5>\n            </div>\n\n            <div class=\"card-body reset-table p-t-0\">\n                <div class=\"form-group row\">\n                    <div class=\"col-sm-4\">\n                    </div>\n                    <div class=\"col-sm-4\">\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <button style=\"float: right;\" type=\"button\" (click)=\"createNew()\"\n                            class=\"btn btn-danger btn-round\">{{'CREATE NEW' | translate}}</button>\n                    </div>\n                </div>\n                <div class=\"table-responsive\">\n                    <table class=\"table table-hover\">\n                        <thead>\n                            <tr class=\"text-uppercase\">\n                                <th>{{'Cover' | translate}}</th>\n                                <th>{{'Restaurants' | translate}}</th>\n                                <th>{{'Status' | translate}}</th>\n                                <th>{{'Action' | translate}}</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let item of dummy\">\n                                <td>\n                                    <ngx-skeleton-loader count=\"1\" [theme]=\"{ \n                                    'border-radius': '5px',\n                                    height: '10px',\n                                    border: '1px solid white'\n                                    }\"></ngx-skeleton-loader>\n                                </td>\n                                <td>\n                                    <ngx-skeleton-loader count=\"1\" [theme]=\"{ \n                                    'border-radius': '5px',\n                                    height: '10px',\n                                    border: '1px solid white'\n                                    }\"></ngx-skeleton-loader>\n                                </td>\n                                <td>\n                                    <ngx-skeleton-loader count=\"1\" [theme]=\"{ \n                                    'border-radius': '5px',\n                                    height: '10px',\n                                    border: '1px solid white'\n                                    }\"></ngx-skeleton-loader>\n                                </td>\n                                <td>\n                                    <ngx-skeleton-loader count=\"1\" [theme]=\"{ \n                                    'border-radius': '5px',\n                                    height: '10px',\n                                    border: '1px solid white'\n                                    }\"></ngx-skeleton-loader>\n                                </td>\n                            </tr>\n                            <tr *ngFor=\"let item of banners;let i = index\">\n                                <td><a href=\"javascript:;\"><img class=\"img-responsive\"\n                                            style=\"height: 100px;width: 100px;\" [src]=\"item.banner\"\n                                            onError=\"this.src='assets/images/user.png'\" alt=\"chat-user\"></a>\n                                </td>\n                                <td>{{item.name}}</td>\n                                <td><button type=\"button\" [className]=\"getClass(item.status)\"\n                                        (click)=\"changeStatus(item)\">{{item.status}}</button>\n                                </td>\n                                <td><button type=\"button\" (click)=\"delete(item)\"\n                                        class=\"btn btn-success btn-round btn-outline-success\">{{'Delete' | translate}}</button>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApisService } from '../services/apis.service';\nimport Swal from 'sweetalert2';\nimport { NgxSpinnerService } from 'ngx-spinner';\n@Component({\n  selector: 'app-banners',\n  templateUrl: './banners.component.html',\n  styleUrls: ['./banners.component.css']\n})\nexport class BannersComponent implements OnInit {\n  dummy = Array(10);\n  banners: any[] = [];\n  constructor(\n    private router: Router,\n    private api: ApisService,\n    private spinner: NgxSpinnerService,\n  ) {\n    this.getBanners();\n  }\n\n  getBanners() {\n    this.api.getBanners().then(data => {\n      console.log(data);\n      this.dummy = [];\n      this.banners = data;\n    }).catch(error => {\n      this.dummy = [];\n      console.log(error);\n    });\n  }\n  ngOnInit() {\n  }\n  createNew() {\n    this.router.navigate(['admin-newbanner']);\n  }\n  getClass(item) {\n    if (item === 'active') {\n      return 'btn btn-primary btn-round';\n    } else if (item === 'deactive') {\n      return 'btn btn-danger btn-round';\n    }\n    return 'btn btn-warning btn-round';\n  }\n  changeStatus(item) {\n    const text = item.status === 'active' ? 'deactive' : 'active';\n    Swal.fire({\n      title: this.api.translate('Are you sure?'),\n      text: this.api.translate('To ') + text + this.api.translate(' this banner!'),\n      icon: 'question',\n      showConfirmButton: true,\n      confirmButtonText: this.api.translate('Yes'),\n      showCancelButton: true,\n      cancelButtonText: this.api.translate('Cancle'),\n      backdrop: false,\n      background: 'white'\n    }).then((data) => {\n      if (data && data.value) {\n        console.log('update it');\n        item.status = text;\n        console.log(item);\n        this.spinner.show();\n        this.api.updateBanner(item).then((data) => {\n          this.spinner.hide();\n          this.getBanners();\n        }, error => {\n          console.log(error);\n          this.spinner.hide();\n        }).catch(error => {\n          this.spinner.hide();\n          console.log(error);\n        });\n      }\n    });\n  }\n  delete(item) {\n    Swal.fire({\n      title: this.api.translate('Are you sure?'),\n      text: this.api.translate('To delete this banner!'),\n      icon: 'question',\n      showConfirmButton: true,\n      confirmButtonText: this.api.translate('Yes'),\n      showCancelButton: true,\n      cancelButtonText: this.api.translate('Cancle'),\n      backdrop: false,\n      background: 'white'\n    }).then((data) => {\n      if (data && data.value) {\n        console.log('update it');\n        this.spinner.show();\n        this.api.deleteBanner(item).then((data) => {\n          this.spinner.hide();\n          this.getBanners();\n        }, error => {\n          console.log(error);\n          this.spinner.hide();\n        }).catch(error => {\n          this.spinner.hide();\n          console.log(error);\n        });\n      }\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BannersRoutingModule } from './banners-routing.module';\nimport { BannersComponent } from './banners.component';\nimport { NgxSkeletonLoaderModule } from 'ngx-skeleton-loader';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { SharedModule } from '../shared/shared.module';\n\n\n@NgModule({\n  declarations: [BannersComponent],\n  imports: [\n    CommonModule,\n    BannersRoutingModule,\n    NgxSkeletonLoaderModule,\n    NgxSpinnerModule,\n    SharedModule\n  ]\n})\nexport class BannersModule { }\n"],"sourceRoot":"webpack:///","file":"banners-banners-module-ngfactory-es5.js"}